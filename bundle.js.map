{"version":3,"sources":["webpack:///webpack/bootstrap e7802f36a579d7798883","webpack:///./snake/coord.js","webpack:///./lib/main.js","webpack:///./snake/gameView.js","webpack:///./lib/dom_node_collection.js","webpack:///./snake/apple.js","webpack:///./snake/board.js","webpack:///./snake/main.js","webpack:///./snake/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,+BAA+B;AAC/B;AACA,oDAAoD;AACpD;AACA;AACA,YAAY;AACZ,0BAA0B;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjD,yCAAyC,qBAAqB;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC,yCAAyC,UAAU;AACnD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,CAAC;;;;;;;ACZD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e7802f36a579d7798883","class Coord {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(coord2) {\n    return (this.x == coord2.x) && (this.y == coord2.y);\n  }\n\n  isOpposite(coord2) {\n    return (this.x == (-1 * coord2.x)) && (this.y == (-1 * coord2.y));\n  }\n\n  plus(coord2) {\n    return new Coord(this.x + coord2.x, this.y + coord2.y);\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/coord.js\n// module id = 0\n// module chunks = 0","const DOMNodeCollection = require('./dom_node_collection');\n\nconst functionQueue = [];\nlet docReady = false;\ndocument.addEventListener(\"DOMContentLoaded\", execute);\n\nfunction execute() {\n  docReady = true;\n  functionQueue.forEach((func) => {\n    func();\n  });\n}\n\nwindow.$p = function(selector) {\n  if (typeof selector === \"function\") {\n    if (docReady) {\n      selector();\n    } else {\n      functionQueue.push(selector);\n    }\n  } else if (selector instanceof HTMLElement) {\n      return new DOMNodeCollection([selector]);\n  } else if (typeof selector === \"string\") {\n      const nodeList = document.querySelectorAll(selector);\n      const nodeListArray = Array.from(nodeList);\n      return new DOMNodeCollection(nodeListArray);\n  } else if (selector === window) {\n      return new DOMNodeCollection([window]);\n  }\n};\n\n$p.extend = function(objectA, ...objects) {\n  objects.forEach((object) => {\n    for (let key in object) {\n      objectA[key] = object[key];\n    }\n  });\n  return objectA;\n};\n\n$p.ajax = function(options = {}) {\n  const defaults = {\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n    method: \"GET\",\n    url: \"\",\n    data: {},\n    success: function() {},\n    error: function() {}\n  };\n\n  $p.extend(defaults, options);\n  const request = new XMLHttpRequest();\n\n  request.open(defaults.method, defaults.url);\n  request.onload = function() {\n    if (request.status === 200) {\n      defaults.success(JSON.parse(request.response));\n    } else {\n      defaults.error(JSON.parse(request.response));\n    }\n  };\n  request.send(defaults.data);\n};\n\nmodule.exports = $p;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 1\n// module chunks = 0","const Board = require(\"./board.js\");\nconst $p = require(\"../lib/main.js\");\n\nclass gameView{\n  constructor(rootEl) {\n    this.rootEl = rootEl;\n    this.board = new Board();\n    this.grid = this.buildGrid();\n    this.scoreEl = $p('.score');\n    this.highScoreEl = $p('.high-score');\n    this.gameOverEl = $p('.game-over');\n    this.restart = this.restart.bind(this);\n    $p(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n    // this.gameInterval = window.setInterval( this.step.bind(this), 100);\n  }\n\n  buildGrid() {\n    let rootInnerHTML = \"\";\n    for (let i = 0; i < this.board.dimension; i++) {\n      rootInnerHTML += \"<ul>\";\n      for (let j = 0; j < this.board.dimension; j++) {\n        rootInnerHTML += \"<li></li>\";\n      }\n      rootInnerHTML += \"</ul>\";\n    }\n    this.rootEl.html(rootInnerHTML);\n    this.liList = $p(\"li\");\n  }\n\n  handleKeyEvent(e) {\n    if (gameView.KEYS[e.keyCode]) {\n      this.board.snake.turn(gameView.KEYS[e.keyCode]);\n    }\n  }\n\n  render() {\n    this.updateClasses(this.board.snake.segments, \"snake\");\n    this.updateClasses([this.board.apple.position], \"apple\");\n    this.updateSnakeHead();\n    this.updateScore();\n  }\n\n  updateClasses(coords, className) {\n    $p(`.${className}`).removeClass(className);\n    if (coords) {\n      coords.forEach( coord => {\n        const flatCoord = (coord.x * this.board.dimension) + coord.y;\n        if (this.liList) {\n          this.liList.eq(flatCoord).addClass(className);\n        }\n      });\n    }\n  }\n\n  updateSnakeHead() {\n    $p(`.snake-head`).removeClass('snake-head');\n    let coord = this.board.snake.segments[this.board.snake.segments.length-1];\n    if (coord) {\n      let flatCoord = coord.x * this.board.dimension + coord.y;\n      this.liList.eq(flatCoord).addClass('snake-head');\n    }\n  }\n  \n  updateScore() {\n    this.scoreEl.html(`Score: ${this.board.score}`);\n    this.highScoreEl.html(`High Score: ${this.board.highScore}`);\n  }\n\n  updateHighScore () {\n    let score = this.board.score;\n    let highScore = this.board.highScore;\n    if (score > highScore) {\n      highScore = score;\n      score = 0;\n    }\n    this.scoreEl.html(`Score: ${score}`);\n    this.highScoreEl.html(`High Score: ${highScore}`);\n  }\n\n  step() {\n    if (this.board.snake.segments.length > 0 ) {\n      this.board.snake.move();\n      this.render();\n    } else {\n      this.updateHighScore();\n      this.renderGameOver();\n    }\n  }\n\n  renderGameOver() {\n    this.gameOverEl.removeClass('hidden');\n    this.gameOverEl.on('click', () => {\n      this.gameOverEl.addClass('hidden');\n      this.board = new Board(Math.max(this.board.score, this.board.highScore));\n      window.clearInterval(this.gameInterval);\n      this.gameInterval = window.setInterval( this.step.bind(this), 100);\n    });\n  }\n\n  restart() {\n    this.gameInterval = window.setInterval( this.step.bind(this), 100);\n  }\n}\n\ngameView.KEYS = {\n  37: \"W\",\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n};\n\nmodule.exports = gameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/gameView.js\n// module id = 2\n// module chunks = 0","class DOMNodeCollection {\n  constructor(collection = []) {\n    this.collection = collection;\n  }\n\n  html(arg) {\n    if (arg === undefined) {\n      return this.collection[0].innerHTML;\n    } else {\n      this.collection.forEach((node) => {\n        node.innerHTML = arg;\n        return;\n      });\n    }\n  }\n\n  empty() {\n    return this.html('');\n  }\n\n  append(content) {\n    if (typeof content === 'string') {\n      this.collection.forEach((node) => {\n        node.innerHTML += content;\n      });\n    } else if (content instanceof DOMNodeCollection) {\n      this.collection.forEach((parent) => {\n        content.collection.forEach((child) => {\n          parent.appendChild(child.cloneNode(true));\n        });\n      });\n    }\n  }\n\n  attr(key, val) {\n    if (val === undefined) {\n      return this.collection[0].getAttribute(key);\n    } else {\n      this.collection[0].setAttribute(key, val);\n      return;\n    }\n  }\n\n  addClass(className) {\n    this.collection.forEach(node => node.classList.add(className));\n  }\n\n  removeClass(className) {\n    this.collection.forEach(node => node.classList.remove(className));\n  }\n\n  children() {\n    let childrenCollection = [];\n    this.collection.forEach((childElement) => {\n      childrenCollection = childrenCollection.concat(childElement.children);\n    });\n\n    return new DOMNodeCollection(childrenCollection);\n  }\n\n  parent() {\n    let parentCollection = [];\n    this.collection.forEach((childElement) => {\n      parentCollection = parentCollection.concat(childElement.parentElement);\n    });\n\n    return new DOMNodeCollection(parentCollection);\n  }\n\n  find(selector) {\n    let selectorNodes = [];\n    this.collection.forEach((node) => {\n      const allNodes = node.querySelectorAll(selector);\n      selectorNodes = selectorNodes.concat(Array.from(allNodes));\n    });\n    return new DOMNodeCollection(selectorNodes);\n  }\n\n  remove() {\n    this.collection.forEach(node => node.parentNode.removeChild(node));\n  }\n\n  on(e, callback) {\n    this.collection.forEach((node) => {\n      node.addEventListener(e, callback);\n      node.eventCallBack = callback;\n    });\n    return;\n  }\n\n  off(e) {\n    this.collection.forEach((node) => {\n      const callback = node.eventCallBack;\n        node.removeEventListener(e, callback);\n    });\n  }\n\n  eq(idx) {\n    return new DOMNodeCollection([this.collection[idx]]);\n  }\n}\n\nmodule.exports = DOMNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 3\n// module chunks = 0","const Coord = require(\"./coord\");\n\nclass Apple {\n  constructor(board) {\n    this.board = board;\n    this.placeApple();\n  }\n\n  placeApple() {\n    let x = Math.floor(Math.random() * this.board.dimension);\n    let y = Math.floor(Math.random() * this.board.dimension);\n    // debugger\n    while (this.board.snake.hasCoord([x, y])) {\n      x = Math.floor(Math.random() * this.board.dimension);\n      y = Math.floor(Math.random() * this.board.dimension);\n    }\n    this.position = new Coord(x, y);\n  }\n}\n\nmodule.exports = Apple;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/apple.js\n// module id = 4\n// module chunks = 0","const Snake = require(\"./snake.js\");\nconst Coord = require(\"./coord.js\");\nconst Apple = require(\"./apple.js\");\n\nclass Board {\n  constructor(highScore) {\n    this.snake = new Snake(this);\n    this.score = 0;\n    if (highScore) {\n      this.highScore = highScore;\n    } else {\n      this.highScore = 0;\n    }\n    this.dimension = 25;\n    this.apple = new Apple(this);\n  }\n\n  isValidPosition(coord) {\n    return (coord.x >= 0 && coord.x < this.dimension &&\n            coord.y >= 0 && coord.y < this.dimension);\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/board.js\n// module id = 5\n// module chunks = 0","const $p = require(\"../lib/main.js\");\nconst gameView = require(\"./gameView.js\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  $p('.new-game').removeClass('hidden');\n  const rootEl = $p('.grid');\n  const view = new gameView(rootEl);\n  $p('.new-game').on('click', () => {\n    view.gameInterval = setInterval( view.step.bind(view), 100);\n\n    $p('.new-game').addClass('hidden');\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/main.js\n// module id = 6\n// module chunks = 0","const Coord = require(\"./coord.js\");\n\nclass Snake {\n  constructor(board) {\n    this.board = board;\n    this.isTurning = false;\n    this.direction = \"E\";\n    this.segments = [new Coord(3, 3)];\n    this.eatApple = this.eatApple.bind(this);\n    this.growthLeft = 0;\n  }\n\n  head() {\n    return this.segments.slice(-1)[0];\n  }\n\n  isValid() {\n    const head = this.head();\n\n    if (!this.board.isValidPosition(this.head())) {\n      return false;\n    }\n\n    for (let i = 0; i < this.segments.length - 1; i++) {\n      if (this.segments[i].equals(head)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  move() {\n    // move snake forward\n\n    this.segments.push(this.head().plus(Snake.MOVES[this.direction]));\n\n    // allow turning again\n    this.isTurning = false;\n\n    // maybe eat an apple\n    if (this.eatApple()) {\n      this.board.score += 10;\n      this.growthLeft = 3;\n      this.board.apple.placeApple();\n    }\n    // if not growing, remove tail segment\n    if (this.growthLeft > 0) {\n      this.growthLeft -= 1;\n    } else {\n      this.segments.shift();\n    }\n    if (!this.isValid()) {\n      this.segments = [];\n    }\n    // destroy snake if it eats itself or runs off grid\n    // if (!this.isValid()) {\n    //   this.segments = [];\n    // }\n  }\n\n  turn(direction) {\n    // avoid turning directly back on yourself\n    if (Snake.MOVES[this.direction].isOpposite(Snake.MOVES[direction]) ||\n      this.isTurning) {\n      return;\n    } else {\n      this.isTurning = true;\n      this.direction = direction;\n    }\n  }\n\n  hasCoord(coords) {\n    let result = false;\n    this.segments.forEach( segment => {\n     if ((segment.x === coords[0]) && (segment.y === coords[1])) {\n       result = true;\n     }\n   });\n   return result;\n }\n\n  eatApple() {\n    if (this.head().equals(this.board.apple.position)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nSnake.MOVES = {\n  \"N\": new Coord(-1, 0),\n  \"E\": new Coord(0, 1),\n  \"S\": new Coord(1, 0),\n  \"W\": new Coord(0, -1)\n};\n\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake/snake.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}